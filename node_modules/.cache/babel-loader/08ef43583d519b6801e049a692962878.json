{"ast":null,"code":"import { FETCH_PRODUCT, FETCH_CATEGORY, FETCH_BOOKING, FETCH_CUSTOMER_LIST, ADD_PRODUCT } from '../utils/constants'; // import swal from 'sweetalert';\n\nimport api from '../api/api';\nexport const fetchProducts = () => {\n  return async dispatch => {\n    try {\n      const response = await api.get('product');\n\n      if (response) {\n        dispatch({\n          type: FETCH_PRODUCT,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error, `<<<<<<<<< error`);\n    }\n  };\n};\nexport const fetchCategories = () => {\n  return async dispatch => {\n    try {\n      const response = await api.get('category');\n\n      if (response) {\n        dispatch({\n          type: FETCH_CATEGORY,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error, `<<<<<<<<< error`);\n    }\n  };\n};\nexport const fetchBookings = () => {\n  return async dispatch => {\n    try {\n      const response = await api.get('booking');\n\n      if (response) {\n        dispatch({\n          type: FETCH_BOOKING,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error, `<<<<<<<<< error`);\n    }\n  };\n};\nexport const fetchCustomerList = () => {\n  return async dispatch => {\n    try {\n      const response = await api.get('customer');\n\n      if (response) {\n        dispatch({\n          type: FETCH_CUSTOMER_LIST,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error, `<<<<<<<<< error`);\n    }\n  };\n};\nexport const addProduct = payload => {\n  return async dispatch => {\n    try {\n      const response = await api.post('product', payload);\n\n      if (response) {\n        dispatch({\n          type: ADD_PRODUCT,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error, `<<< error add product`);\n    }\n  };\n};","map":{"version":3,"names":["FETCH_PRODUCT","FETCH_CATEGORY","FETCH_BOOKING","FETCH_CUSTOMER_LIST","ADD_PRODUCT","api","fetchProducts","dispatch","response","get","type","payload","data","error","console","log","fetchCategories","fetchBookings","fetchCustomerList","addProduct","post"],"sources":["/Users/bbs/Documents/Bootcamp/SIB Kampus Merderka/CapstoneProject/Ecommerce-Client/client-site/src/redux/action.js"],"sourcesContent":["import { FETCH_PRODUCT, FETCH_CATEGORY, FETCH_BOOKING, FETCH_CUSTOMER_LIST, ADD_PRODUCT } from '../utils/constants';\n// import swal from 'sweetalert';\nimport api from '../api/api';\n\nexport const fetchProducts = () => {\n    return async (dispatch) => {\n        try {\n            const response = await api.get('product')\n            if(response) {\n                dispatch({ type: FETCH_PRODUCT, payload: response.data })\n            }\n        } catch (error) {\n            console.log(error, `<<<<<<<<< error`);\n        }\n    }\n}\n\nexport const fetchCategories = () => {\n    return async (dispatch) => {\n        try {\n            const response = await api.get('category')\n            if(response) {\n                dispatch({ type: FETCH_CATEGORY, payload: response.data })\n            }\n        } catch (error) {\n            console.log(error, `<<<<<<<<< error`);\n        }\n    }\n}\n\nexport const fetchBookings = () => {\n    return async (dispatch) => {\n        try {\n            const response = await api.get('booking')\n            if(response) {\n                dispatch({ type: FETCH_BOOKING, payload: response.data })\n            }\n        } catch (error) {\n            console.log(error, `<<<<<<<<< error`);\n        }\n    }\n}\n\nexport const fetchCustomerList = () => {\n    return async (dispatch) => {\n        try {\n            const response = await api.get('customer')\n            if(response) {\n                dispatch({ type: FETCH_CUSTOMER_LIST, payload: response.data })\n            }\n        } catch (error) {\n            console.log(error, `<<<<<<<<< error`);\n        }\n    }\n}\n\nexport const addProduct = (payload) => {\n    return async (dispatch) => {\n        try {\n            const response = await api.post('product', payload)\n            if(response) {\n                dispatch({ type: ADD_PRODUCT, payload: response.data })\n            }\n        } catch (error) {\n            console.log(error, `<<< error add product`);\n        }\n    }\n}"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,mBAAvD,EAA4EC,WAA5E,QAA+F,oBAA/F,C,CACA;;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOC,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQ,SAAR,CAAvB;;MACA,IAAGD,QAAH,EAAa;QACTD,QAAQ,CAAC;UAAEG,IAAI,EAAEV,aAAR;UAAuBW,OAAO,EAAEH,QAAQ,CAACI;QAAzC,CAAD,CAAR;MACH;IACJ,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,iBAApB;IACH;EACJ,CATD;AAUH,CAXM;AAaP,OAAO,MAAMG,eAAe,GAAG,MAAM;EACjC,OAAO,MAAOT,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQ,UAAR,CAAvB;;MACA,IAAGD,QAAH,EAAa;QACTD,QAAQ,CAAC;UAAEG,IAAI,EAAET,cAAR;UAAwBU,OAAO,EAAEH,QAAQ,CAACI;QAA1C,CAAD,CAAR;MACH;IACJ,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,iBAApB;IACH;EACJ,CATD;AAUH,CAXM;AAaP,OAAO,MAAMI,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOV,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQ,SAAR,CAAvB;;MACA,IAAGD,QAAH,EAAa;QACTD,QAAQ,CAAC;UAAEG,IAAI,EAAER,aAAR;UAAuBS,OAAO,EAAEH,QAAQ,CAACI;QAAzC,CAAD,CAAR;MACH;IACJ,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,iBAApB;IACH;EACJ,CATD;AAUH,CAXM;AAaP,OAAO,MAAMK,iBAAiB,GAAG,MAAM;EACnC,OAAO,MAAOX,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQ,UAAR,CAAvB;;MACA,IAAGD,QAAH,EAAa;QACTD,QAAQ,CAAC;UAAEG,IAAI,EAAEP,mBAAR;UAA6BQ,OAAO,EAAEH,QAAQ,CAACI;QAA/C,CAAD,CAAR;MACH;IACJ,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,iBAApB;IACH;EACJ,CATD;AAUH,CAXM;AAaP,OAAO,MAAMM,UAAU,GAAIR,OAAD,IAAa;EACnC,OAAO,MAAOJ,QAAP,IAAoB;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACe,IAAJ,CAAS,SAAT,EAAoBT,OAApB,CAAvB;;MACA,IAAGH,QAAH,EAAa;QACTD,QAAQ,CAAC;UAAEG,IAAI,EAAEN,WAAR;UAAqBO,OAAO,EAAEH,QAAQ,CAACI;QAAvC,CAAD,CAAR;MACH;IACJ,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,uBAApB;IACH;EACJ,CATD;AAUH,CAXM"},"metadata":{},"sourceType":"module"}